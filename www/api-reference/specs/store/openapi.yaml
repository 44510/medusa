openapi: 3.0.0
info:
  version: 1.0.0
  title: Medusa Storefront API
  license:
    name: MIT
    url: https://github.com/medusajs/medusa/blob/master/LICENSE
tags:
  - name: Auth
    description: >-
      Auth endpoints that allow authorization of customers and manages their
      sessions.
  - name: Carts
    description: Cart endpoints that allow handling carts in Medusa.
  - name: Collections
    description: Collection endpoints that allow handling collections in Medusa.
  - name: Customers
    description: Customer endpoints that allow handling customers in Medusa.
  - name: Gift Cards
    description: Gift Card endpoints that allow handling gift cards in Medusa.
  - name: Orders
    description: Order endpoints that allow handling orders in Medusa.
  - name: Products
    description: Product endpoints that allow handling products in Medusa.
  - name: Regions
    description: Region endpoints that allow handling regions in Medusa.
  - name: Return Reasons
    description: Return Reason endpoints that allow handling return reasons in Medusa.
  - name: Returns
    description: Return endpoints that allow handling returns in Medusa.
  - name: Shipping Options
    description: Shipping Option endpoints that allow handling shipping options in Medusa.
  - name: Swaps
    description: Swap endpoints that allow handling swaps in Medusa.
servers:
  - url: https://api.medusa-commerce.com
paths:
  /store/auth:
    $ref: paths/store_auth.yaml
  /store/auth/{email}:
    $ref: paths/store_auth_{email}.yaml
  /store/carts:
    $ref: paths/store_carts.yaml
  /store/carts/{id}:
    $ref: paths/store_carts_{id}.yaml
  /store/carts/{id}/complete:
    $ref: paths/store_carts_{id}_complete.yaml
  /store/carts/{id}/discounts/{code}:
    $ref: paths/store_carts_{id}_discounts_{code}.yaml
  /store/carts/{id}/line-items:
    $ref: paths/store_carts_{id}_line-items.yaml
  /store/carts/{id}/line-items/{line_id}:
    $ref: paths/store_carts_{id}_line-items_{line_id}.yaml
  /store/carts/{id}/payment-session:
    $ref: paths/store_carts_{id}_payment-session.yaml
  /store/carts/{id}/payment-sessions:
    $ref: paths/store_carts_{id}_payment-sessions.yaml
  /store/carts/{id}/payment-sessions/{provider_id}:
    $ref: paths/store_carts_{id}_payment-sessions_{provider_id}.yaml
  /store/carts/{id}/payment-sessions/{provider_id}/refresh:
    $ref: paths/store_carts_{id}_payment-sessions_{provider_id}_refresh.yaml
  /store/carts/{id}/shipping-methods:
    $ref: paths/store_carts_{id}_shipping-methods.yaml
  /store/carts/{id}/taxes:
    $ref: paths/store_carts_{id}_taxes.yaml
  /store/collections:
    $ref: paths/store_collections.yaml
  /store/collections/{id}:
    $ref: paths/store_collections_{id}.yaml
  /store/customers:
    $ref: paths/store_customers.yaml
  /store/customers/me:
    $ref: paths/store_customers_me.yaml
  /store/customers/me/addresses:
    $ref: paths/store_customers_me_addresses.yaml
  /store/customers/me/addresses/{address_id}:
    $ref: paths/store_customers_me_addresses_{address_id}.yaml
  /store/customers/me/orders:
    $ref: paths/store_customers_me_orders.yaml
  /store/customers/me/payment-methods:
    $ref: paths/store_customers_me_payment-methods.yaml
  /store/customers/password-reset:
    $ref: paths/store_customers_password-reset.yaml
  /store/customers/password-token:
    $ref: paths/store_customers_password-token.yaml
  /store/gift-cards/{code}:
    $ref: paths/store_gift-cards_{code}.yaml
  /store/order-edits/{id}:
    $ref: paths/store_order-edits_{id}.yaml
  /store/order-edits/{id}/complete:
    $ref: paths/store_order-edits_{id}_complete.yaml
  /store/order-edits/{id}/decline:
    $ref: paths/store_order-edits_{id}_decline.yaml
  /store/orders:
    $ref: paths/store_orders.yaml
  /store/orders/batch/customer/token:
    $ref: paths/store_orders_batch_customer_token.yaml
  /store/orders/cart/{cart_id}:
    $ref: paths/store_orders_cart_{cart_id}.yaml
  /store/orders/customer/confirm:
    $ref: paths/store_orders_customer_confirm.yaml
  /store/orders/{id}:
    $ref: paths/store_orders_{id}.yaml
  /store/payment-collections/{id}:
    $ref: paths/store_payment-collections_{id}.yaml
  /store/payment-collections/{id}/sessions:
    $ref: paths/store_payment-collections_{id}_sessions.yaml
  /store/payment-collections/{id}/sessions/batch:
    $ref: paths/store_payment-collections_{id}_sessions_batch.yaml
  /store/payment-collections/{id}/sessions/batch/authorize:
    $ref: paths/store_payment-collections_{id}_sessions_batch_authorize.yaml
  /store/payment-collections/{id}/sessions/{session_id}:
    $ref: paths/store_payment-collections_{id}_sessions_{session_id}.yaml
  /store/payment-collections/{id}/sessions/{session_id}/authorize:
    $ref: paths/store_payment-collections_{id}_sessions_{session_id}_authorize.yaml
  /store/product-categories:
    $ref: paths/store_product-categories.yaml
  /store/product-categories/{id}:
    $ref: paths/store_product-categories_{id}.yaml
  /store/product-tags:
    $ref: paths/store_product-tags.yaml
  /store/product-types:
    $ref: paths/store_product-types.yaml
  /store/products:
    $ref: paths/store_products.yaml
  /store/products/search:
    $ref: paths/store_products_search.yaml
  /store/products/{id}:
    $ref: paths/store_products_{id}.yaml
  /store/regions:
    $ref: paths/store_regions.yaml
  /store/regions/{id}:
    $ref: paths/store_regions_{id}.yaml
  /store/return-reasons:
    $ref: paths/store_return-reasons.yaml
  /store/return-reasons/{id}:
    $ref: paths/store_return-reasons_{id}.yaml
  /store/returns:
    $ref: paths/store_returns.yaml
  /store/shipping-options:
    $ref: paths/store_shipping-options.yaml
  /store/shipping-options/{cart_id}:
    $ref: paths/store_shipping-options_{cart_id}.yaml
  /store/swaps:
    $ref: paths/store_swaps.yaml
  /store/swaps/{cart_id}:
    $ref: paths/store_swaps_{cart_id}.yaml
  /store/variants:
    $ref: paths/store_variants.yaml
  /store/variants/{variant_id}:
    $ref: paths/store_variants_{variant_id}.yaml
components:
  securitySchemes:
    cookie_auth:
      type: apiKey
      x-displayName: Cookie Session ID
      in: cookie
      name: connect.sid
      description: >
        Use a cookie session to send authenticated requests.


        ### How to Obtain the Cookie Session


        If you're sending requests through a browser, using JS Client, or using
        tools like Postman, the cookie session should be automatically set when
        the customer is logged in.


        If you're sending requests using cURL, you must set the Session ID in
        the cookie manually.


        To do that, send a request to [authenticate the
        customer](#tag/Auth/operation/PostAuth) and pass the cURL option `-v`:


        ```bash

        curl -v --location --request POST 'https://medusa-url.com/store/auth' \

        --header 'Content-Type: application/json' \

        --data-raw '{
          "email": "user@example.com",
          "password": "supersecret"
        }'

        ```


        The headers will be logged in the terminal as well as the response. You
        should find in the headers a Cookie header similar to this:


        ```bash

        Set-Cookie:
        connect.sid=s%3A2Bu8BkaP9JUfHu9rG59G16Ma0QZf6Gj1.WT549XqX37PN8n0OecqnMCq798eLjZC5IT7yiDCBHPM;

        ```


        Copy the value after `connect.sid` (without the `;` at the end) and pass
        it as a cookie in subsequent requests as the following:


        ```bash

        curl --location --request GET
        'https://medusa-url.com/store/customers/me/orders' \

        --header 'Cookie: connect.sid={sid}'

        ```


        Where `{sid}` is the value of `connect.sid` that you copied.
