import { CatalogModuleService } from "@services"
import { CatalogModuleOptions } from "../../types"

const configMock: CatalogModuleOptions = {
  objects: [
    {
      entity: "Product",
      fields: ["id", "title", "subtitle", "description"],
      listeners: ["product.created", "product.updated"],
    },
    {
      parents: ["Product"],
      entity: "ProductVariant",
      fields: ["id", "product_id", "sku"],
      listeners: ["variants.created", "variants.updated"],
    },
    {
      parents: ["ProductVariant"],
      entity: "MoneyAmount",
      fields: ["id", "amount"],
      listeners: ["prices.created", "prices.updated"],
    },
  ],
}

describe("CatalogModuleService", function () {
  let service: CatalogModuleService
  const eventBusServiceMock = {
    subscribe: jest.fn(),
  }

  beforeEach(() => {
    service = new CatalogModuleService(
      {
        eventBusModuleService: eventBusServiceMock as any,
      } as any,
      { options: configMock as any } as any
    )
  })

  it("should be build a partial objects tree from an array of objects", function () {
    // The aliases are generated by the buildObjectsTree method and do not
    // come from the modules configuration since the modules are not loaded in this context

    const result = CatalogModuleService.buildObjectsTree(configMock.objects)

    expect(result).toEqual({
      Product: {
        entity: "Product",
        fields: [
          "id",
          "product_id",
          "sku",
          "productVariant.id",
          "productVariant.product_id",
          "productVariant.sku",
        ],
        listeners: ["product.created", "product.updated"],
        alias: "product",
      },
      ProductVariant: {
        parents: ["Product"],
        entity: "ProductVariant",
        fields: ["id", "amount", "moneyAmount.id", "moneyAmount.amount"],
        listeners: ["variants.created", "variants.updated"],
        alias: "productVariant",
      },
      MoneyAmount: {
        parents: ["ProductVariant"],
        entity: "MoneyAmount",
        fields: ["id", "amount"],
        listeners: ["prices.created", "prices.updated"],
        alias: "moneyAmount",
      },
    })
  })
})
